"""
Построить инвертированный индекс по стихотворению "Чепушники" Сергея Михалкова:

На выходе индекс должен представлять из себя массив вида:
[
  {
    <слово>:
      [
        { <номер_строки>, <номер_позиции> },
        ...
      ]
  },
  ...
]
Язык программирования может быть любой. Как передавать входные данные, тоже не важно.
Вывод либо в консоль, либо в файл.

Бонусом - можно попробовать реализовать поиск слов по построенному индексу.
"""
from pprint import pprint


def words_indexing(text_file):
    """
    Функция принимает название/путь текстового файла и разбив текст файла сначала
    на строки а затем на отдельные слова(предварительно удалив знаки препинания)
    и на выходе возвращает необходимый по условию массив.
    """
    words_dict = {}
    with open(text_file, 'r') as file:
        for line_ix, line in enumerate(file.readlines()):
            line = ''.join([letter for letter in line.lower() if letter not in '.,:;']).split()
            # В предыдущей строке кода мы убираем знаки препинания, и разбиваем строку
            # на отдельные слова. Я решил не трогать дефиз в словах "жили-были" т.к. это
            # является устойчивым выражением и если их записать как 2 слова то это будет
            # искажением значения.
            for word in line:
                words_dict[word] = words_dict.get(word, list()) + [(line_ix, line.index(word))]
    return [{word[0]: word[1]} for word in words_dict.items()]


if __name__ == '__main__':
    pprint(words_indexing('text.txt'))
